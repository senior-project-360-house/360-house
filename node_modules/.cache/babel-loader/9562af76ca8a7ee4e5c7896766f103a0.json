{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nguye\\\\Downloads\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nguye\\\\Downloads\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nguye\\\\Downloads\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nguye\\\\Downloads\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\nguye\\\\Downloads\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Downloads\\\\New folder\\\\src\\\\components\\\\Account\\\\Profile\\\\LoginManagement.js\";\nimport React, { Component } from \"react\";\nimport { withFirebase } from '../../../server/Firebase/index';\nimport { DefaultLoginToggle, SocialLoginToggle } from './LoginToggle';\nvar SIGN_IN_METHODS = [{\n  id: \"password\",\n  provider: null\n}, //If add new provider add new field\n{\n  id: \"google.com\",\n  provider: \"googleProvider\"\n}];\n\nvar LoginManagementBase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginManagementBase, _Component);\n\n  function LoginManagementBase(props) {\n    var _this;\n\n    _classCallCheck(this, LoginManagementBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginManagementBase).call(this, props));\n\n    _this.fetchSignInMethods = function () {\n      _this.props.firebase.auth.fetchSignInMethodsForEmail(_this.props.authUser.email).then(function (activeSignInMethods) {\n        return _this.setState({\n          activeSignInMethods: activeSignInMethods,\n          error: null\n        });\n      }).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.onSocialLoginLink = function (provider) {\n      _this.props.firebase.auth.currentUser.linkWithPopup(_this.props.firebase[provider]).then(_this.fetchSignInMethods).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.onDefaultLoginLink = function (password) {\n      var credential = _this.props.firebase.emailAuthProvider.credential(_this.props.authUser.email, password);\n\n      _this.props.firebase.auth.currentUser.linkAndRetrieveDataWithCredential(credential).then(_this.fetchSignInMethods).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.onUnlink = function (providerId) {\n      _this.props.firebase.auth.currentUser.unlink(providerId).then(_this.fetchSignInMethods).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.state = {\n      activeSignInMethods: [],\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(LoginManagementBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchSignInMethods();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          activeSignInMethods = _this$state.activeSignInMethods,\n          error = _this$state.error;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Sign In Methods:\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, SIGN_IN_METHODS.map(function (signInMethod) {\n        var onlyOneLeft = activeSignInMethods.length === 1;\n        var isEnabled = activeSignInMethods.includes(signInMethod.id);\n        return React.createElement(\"li\", {\n          key: signInMethod.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, signInMethod.id === \"password\" ? React.createElement(DefaultLoginToggle, {\n          onlyOneLeft: onlyOneLeft,\n          isEnabled: isEnabled,\n          signInMethod: signInMethod,\n          onLink: _this2.onDefaultLoginLink,\n          onUnlink: _this2.onUnlink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }) : React.createElement(SocialLoginToggle, {\n          onlyOneLeft: onlyOneLeft,\n          isEnabled: isEnabled,\n          signInMethod: signInMethod,\n          onLink: _this2.onSocialLoginLink,\n          onUnlink: _this2.onUnlink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }));\n      })), error && error.message);\n    }\n  }]);\n\n  return LoginManagementBase;\n}(Component);\n\nvar LoginManagement = withFirebase(LoginManagementBase);\nexport default LoginManagement;","map":{"version":3,"sources":["C:\\Users\\nguye\\Downloads\\New folder\\src\\components\\Account\\Profile\\LoginManagement.js"],"names":["React","Component","withFirebase","DefaultLoginToggle","SocialLoginToggle","SIGN_IN_METHODS","id","provider","LoginManagementBase","props","fetchSignInMethods","firebase","auth","fetchSignInMethodsForEmail","authUser","email","then","activeSignInMethods","setState","error","catch","onSocialLoginLink","currentUser","linkWithPopup","onDefaultLoginLink","password","credential","emailAuthProvider","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","state","map","signInMethod","onlyOneLeft","length","isEnabled","includes","message","LoginManagement"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nimport {withFirebase} from '../../../server/Firebase/index';\nimport {DefaultLoginToggle, SocialLoginToggle} from './LoginToggle';\n\nconst SIGN_IN_METHODS = [\n\t{\n\t\tid: \"password\",\n\t\tprovider: null\n\t},\n\t//If add new provider add new field\n\t{\n\t\tid: \"google.com\",\n\t\tprovider: \"googleProvider\"\n\t}\n];\n\nclass LoginManagementBase extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactiveSignInMethods: [],\n\t\t\terror: null\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchSignInMethods();\n\t}\n\n\tfetchSignInMethods = () => {\n\t\tthis.props.firebase.auth\n\t\t\t.fetchSignInMethodsForEmail(this.props.authUser.email)\n\t\t\t.then(activeSignInMethods =>\n\t\t\t\tthis.setState({activeSignInMethods, error: null})\n\t\t\t)\n\t\t\t.catch(error => this.setState({error}));\n\t};\n\n\tonSocialLoginLink = provider => {\n\t\tthis.props.firebase.auth.currentUser\n\t\t\t.linkWithPopup(this.props.firebase[provider])\n\t\t\t.then(this.fetchSignInMethods)\n\t\t\t.catch(error => this.setState({error}));\n\t};\n\n\tonDefaultLoginLink = password => {\n\t\tconst credential = this.props.firebase.emailAuthProvider.credential(\n\t\t\tthis.props.authUser.email,\n\t\t\tpassword\n\t\t);\n\t\tthis.props.firebase.auth.currentUser\n\t\t\t.linkAndRetrieveDataWithCredential(credential)\n\t\t\t.then(this.fetchSignInMethods)\n\t\t\t.catch(error => this.setState({error}));\n\t};\n\n\tonUnlink = providerId => {\n\t\tthis.props.firebase.auth.currentUser\n\t\t\t.unlink(providerId)\n\t\t\t.then(this.fetchSignInMethods)\n\t\t\t.catch(error => this.setState({error}));\n\t};\n\n\trender() {\n\t\tconst {activeSignInMethods, error} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tSign In Methods:\n\t\t\t\t<ul>\n\t\t\t\t\t{SIGN_IN_METHODS.map(signInMethod => {\n\t\t\t\t\t\tconst onlyOneLeft = activeSignInMethods.length === 1;\n\t\t\t\t\t\tconst isEnabled = activeSignInMethods.includes(signInMethod.id);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={signInMethod.id}>\n\t\t\t\t\t\t\t\t{signInMethod.id === \"password\" ? (\n\t\t\t\t\t\t\t\t\t<DefaultLoginToggle\n\t\t\t\t\t\t\t\t\t\tonlyOneLeft={onlyOneLeft}\n\t\t\t\t\t\t\t\t\t\tisEnabled={isEnabled}\n\t\t\t\t\t\t\t\t\t\tsignInMethod={signInMethod}\n\t\t\t\t\t\t\t\t\t\tonLink={this.onDefaultLoginLink}\n\t\t\t\t\t\t\t\t\t\tonUnlink={this.onUnlink}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<SocialLoginToggle\n\t\t\t\t\t\t\t\t\t\tonlyOneLeft={onlyOneLeft}\n\t\t\t\t\t\t\t\t\t\tisEnabled={isEnabled}\n\t\t\t\t\t\t\t\t\t\tsignInMethod={signInMethod}\n\t\t\t\t\t\t\t\t\t\tonLink={this.onSocialLoginLink}\n\t\t\t\t\t\t\t\t\t\tonUnlink={this.onUnlink}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t{error && error.message}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nexport default LoginManagement;\n"]},"metadata":{},"sourceType":"module"}