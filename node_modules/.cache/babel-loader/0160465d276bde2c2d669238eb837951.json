{"ast":null,"code":"import React from 'react';\n/*\n  Similar to firebase context, however, here we need firebase\n  instance to do {authorization, authentication, emailVerified},\n  so we return\n  a class WithAuthentication that was wrap inside withFirebase.\n  next time any component that need {authorization, authentication, emailVerified}\n  we can wrap it\n  inside {withAuthorization,withEmailVerification,withAuthentication}\n  **IMPORTANT** the order of wrap is important.\n */\n\nvar AuthUserContext = React.createContext(null);\nexport default AuthUserContext;","map":{"version":3,"sources":["C:\\Users\\nguye\\Downloads\\New folder\\src\\server\\Session\\context.js"],"names":["React","AuthUserContext","createContext"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;;;;;;;;;;AAUA,IAAMC,eAAe,GAAGD,KAAK,CAACE,aAAN,CAAoB,IAApB,CAAxB;AAEA,eAAeD,eAAf","sourcesContent":["import React from 'react';\n/*\n  Similar to firebase context, however, here we need firebase\n  instance to do {authorization, authentication, emailVerified},\n  so we return\n  a class WithAuthentication that was wrap inside withFirebase.\n  next time any component that need {authorization, authentication, emailVerified}\n  we can wrap it\n  inside {withAuthorization,withEmailVerification,withAuthentication}\n  **IMPORTANT** the order of wrap is important.\n */\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n"]},"metadata":{},"sourceType":"module"}